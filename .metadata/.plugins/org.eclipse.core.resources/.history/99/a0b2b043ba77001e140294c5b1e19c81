<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
	<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags"%>
	<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
	<nav class="navbar navbar-expand-lg bg-body-tertiary" style="z-index: 1">
		<div class="container-fluid">
			<a class="navbar-brand" href="#">Navbar</a>
			<button class="navbar-toggler" type="button"
				data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
				aria-controls="navbarSupportedContent" aria-expanded="false"
				aria-label="Toggle navigation">
				<span class="navbar-toggler-icon"></span>
			</button>
			<div class="collapse navbar-collapse" id="navbarSupportedContent">
				<ul class="navbar-nav me-auto mb-2 mb-lg-0">
					<li class="nav-item"><a class="nav-link active" aria-current="page" href="/">Home</a></li>
					<li class="nav-item"><a class="nav-link" href="/board/list">Board List</a></li>
					
					<!-- 현재 인증한 사용자의 정보를 가져와서 해당 권한이 있는 케이스를 open -->
					<!-- 사용자 정보는 principal객체 -->
					<!-- admin 계정만 할 수 있는 일을 처리 -->
					<!-- anymatch() :stream 매칭 메서드 (최소한 한개의 요소가 주어진 조건에 맞는지 조사)-->
					<!-- 로그인 해야 open되는 메뉴들... -->

					<sec:authorize access="isAuthenticated()">
					<sec:authentication property="principal.mvo.email" var="authEmail"/>
					<sec:authentication property="principal.mvo.nickName" var="authNick"/>
					<sec:authentication property="principal.mvo.authlist" var="auths"/>
					<c:choose>
						<c:when test="${auths.stream().anyMatch(authVO -> authVO.auth.equals('ROLE_ADMIN')).get()}">
							<li class="nav-item">
								<a class="nav-link" href="/member/list">ADMIN > ${authNick}${authEmail}</a>
							</li>
						</c:when>
						<c:otherwise>
							<li class="nav-item">
								<a class="nav-link" href="/member/detail?mvo=${principal.mvo}">${authNick}${authEmail}</a>
							</li>
							
						</c:otherwise>
					</c:choose>
					<li class="nav-item">
						<a class="nav-link" href="/member/logout" id="logoutLink">Logout</a>
					</li>
						<form action="/member/logout" method="post" id="logoutForm">
							<input type="hidden" name="email" value="${authEmail}">
						</form>					
					<li class="nav-item">
						<a class="nav-link" href="/board/register">Board REG</a>
					</li>
					</sec:authorize>
				<!-- 아직 로그인 전 상태에서 open되어야 할 메뉴 -->
					<sec:authorize access="isAnonymous()">
						<li class="nav-item"><a class="nav-link" href="/member/register">Member Register</a></li>
						<li class="nav-item"><a class="nav-link" href="/member/login">Login</a></li>
					</sec:authorize>
				</ul>
				<form class="d-flex" role="search">
					<input class="form-control me-2" type="search" placeholder="Search"
						aria-label="Search">
					<button class="btn btn-outline-success" type="submit">Search</button>
				</form>
			</div>
		</div>
	</nav>
	<script type="text/javascript">
		document.getElementById('logoutLink').addEventListener('click',(e)=>{
			e.preeventDefault();/* 기존의 이벤트를 없앰 */
			document.getElementById('logoutForm').submit();
		})
	</script>
</body>
</html>